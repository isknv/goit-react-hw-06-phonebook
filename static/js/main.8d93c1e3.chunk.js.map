{"version":3,"sources":["redux/phoneBook/phoneBookActions.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","redux/phoneBook/phoneBookReducer.jsx","redux/store.jsx","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","filter","storageContact","ContactForm","state","nameId","phoneId","handelInputChange","event","target","value","setState","handelFormSubmit","preventDefault","props","contacts","find","contact","toLowerCase","alert","onSubmit","className","this","InputGroup","FormControl","type","required","onChange","autoComplete","Button","variant","Component","connect","items","dispatch","contactsActions","getVisibleContacts","allContacts","normalizedFilter","includes","onDeleteContact","map","index","onClick","App","contactsStorage","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","mapDispatchToProps","action","createReducer","actions","_","combineReducers","store","configureStore","reducer","phoneBookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d93c1e3.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('phoneBook/add', (name, number) => {\n  return {\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContact = createAction('phoneBook/delete', id => {\n  return {\n    payload: id,\n  };\n});\n\nconst changeFilter = createAction('phoneBook/changeFilter', filter => {\n  return {\n    payload: filter,\n  };\n});\n\nconst storageContact = createAction('phoneBook/storageContact');\n\nexport default { addContact, deleteContact, changeFilter, storageContact };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport contactsActions from \"../../redux/phoneBook/phoneBookActions\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, FormControl, InputGroup } from \"react-bootstrap\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameId = uuidv4();\n  phoneId = uuidv4();\n\n  handelInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handelFormSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n    const existContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (existContact) {\n      return alert(`Contact \"${name}\" already exists`);\n    }\n    this.props.onSubmit(name, number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className=\"form-horizontal\" onSubmit={this.handelFormSubmit}>\n        <div className=\"container-name\">\n          <label className=\"form-label\">\n            Name\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                aria-label=\"Text input with checkbox\"\n                className=\"form-input\"\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                required\n                onChange={this.handelInputChange}\n                autoComplete=\"off\"\n              />\n            </InputGroup>\n          </label>\n        </div>\n        <div className=\"container-number\">\n          <label className=\"form-label\" id={this.phoneId}>\n            Number\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                aria-label=\"Text input with checkbox\"\n                className=\"form-input\"\n                type=\"tel\"\n                name=\"number\"\n                value={this.state.number}\n                required\n                id={this.phoneId}\n                onChange={this.handelInputChange}\n                autoComplete=\"off\"\n              />\n            </InputGroup>\n          </label>\n        </div>\n        <Button className=\"btn-form\" type=\"submit\" variant=\"outline-success\">\n          Add contact\n        </Button>\n      </form>\n    );\n  }\n}\n\nconst mapstateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsActions.addContact(name, number)),\n});\n\nexport default connect(mapstateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/phoneBook/phoneBookActions\";\nimport { Button } from \"react-bootstrap\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className=\"list-filter\">\n      {contacts.map((contact, index) => {\n        const { id, name, number } = contact;\n\n        return (\n          <li className=\"item-filter\" key={id}>\n            <span className=\"index\">{++index}</span>\n            <p className=\"name\">{name}:</p>\n            <p className=\"number\">{number}</p>\n            <Button\n              className=\"delBtn\"\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </Button>{\" \"}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapstateToProps = state => {\n  return {\n    contacts: getVisibleContacts(state.contacts.items, state.contacts.filter),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapstateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/phoneBook/phoneBookActions\";\nimport { FormControl, InputGroup } from \"react-bootstrap\";\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <>\n      {\" \"}\n      <form>\n        <label>\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              aria-label=\"Text input with checkbox\"\n              type=\"text\"\n              name=\"name\"\n              value={filter}\n              required\n              onChange={onChange}\n              className=\"finde-input\"\n              autoComplete=\"off\"\n            />\n          </InputGroup>\n        </label>\n      </form>\n    </>\n  );\n};\n\nconst mapstateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(contactsActions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapstateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport action from \"./redux/phoneBook/phoneBookActions\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const contactsStorage = localStorage.getItem(\"contacts\");\n    if (contactsStorage) {\n      this.props.storageContact(JSON.parse(contactsStorage));\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { contacts } = this.props;\n    if (prevProps.contacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"container\">\n          <h1>Phonebook</h1>\n          <ContactForm />\n          <h2 className=\"contacts\">Contacts</h2>\n          <Filter />\n        </div>\n        <div className=\"container-contacts\">\n          <ContactList />\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  storageContact: action.storageContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./phoneBookActions\";\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, action) => [action.payload, ...state],\n  [actions.deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n  [actions.storageContact]: (state, action) => action.payload,\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport phoneBookReducer from \"./phoneBook/phoneBookReducer\";\n\nconst store = configureStore({\n  reducer: { contacts: phoneBookReducer },\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/es/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n//persistor={store.persistor}\n"],"sourceRoot":""}